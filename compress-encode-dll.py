import argparse
import zlib
import base64
import sys
import os

class CompressEncodeDLL():

    def __init__(self, filename):
        if not (os.path.exists(filename) and filename.endswith('.dll')):
            print('[-] ERROR: you must supply a DLL asssembly file.')
            sys.exit(0)
        fh = open(filename, 'rb')
        payload = fh.read()
        fh.close()
        outfile = '{}-compressed.xml'.format(
            os.path.basename(filename)[:-4]
        )
        print('[*] Writing outfile file [{}]'.format(outfile))
        fhout = open(outfile, 'w')
        fhout.write(
            'private static string encoded_compressed_dll' +
            ' = @"{}";'.format(self.run(payload))
        )
        fhout.close()

    def run(self, payload):
        compressed = zlib.compress(payload)[2:-4]
        return base64.b64encode(compressed).decode()


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('filename', help='DLL Assembly File')
    args = parser.parse_args()
    CompressEncodeDLL(args.filename)